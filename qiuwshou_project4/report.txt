-Map function reads a <ImmutableBytes, Result> pair as input. The key represents row that is a uri address in HBtable. And the result contains all the content in that uri. We use the getfreq() function to produce a hash for all the words in the contend and their corresponding frequencies. Then we iterates through the hash, and output a <word, frequency> pair for reduce function.
-Reduce function reads a <Text, LongWritable> pair as input. For the pairs of the same key, we add up all the frequencies in the pairs and calculate the total frequency. Then we use the Put operation to simulate the HBtable as output. We use the frequencies and count attributes in the constants, and use them as attributes of column. Since we need to put the output into HBtable, we convert the key as immutablebytes.  